{"ast":null,"code":"import mockData from './mock-data';\nexport const checkToken = async accessToken => {\n  try {\n    const response = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Error checking token:\", error);\n    return {\n      error: \"Token check failed\"\n    };\n  }\n};\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || tokenCheck.error) {\n    localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    if (!code) {\n      try {\n        const response = await fetch('https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url');\n        const result = await response.json();\n        const {\n          authUrl\n        } = result;\n        window.location.href = authUrl;\n        return null; // Explicitly return null if redirecting\n      } catch (error) {\n        console.error(\"Error fetching auth URL:\", error);\n        return null;\n      }\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\n/**\n * Extracts unique locations from the events array.\n * @param {Array} events - The events array\n * @returns {Array} Unique locations\n */\nexport const extractLocations = events => {\n  const extractedLocations = events.map(event => event.location);\n  return [...new Set(extractedLocations)];\n};\n\n/**\n * Fetches the list of events, using mock data in a local environment.\n * @returns {Array|null} The list of events, or null if fetching fails\n */\nexport const getEvents = async () => {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockData;\n  }\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = \"https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-events\" + \"/\" + token;\n    try {\n      const response = await fetch(url);\n      const result = await response.json();\n      return result.events || null;\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n      return null;\n    }\n  }\n  return null;\n};\n\n/**\n * Removes the OAuth query parameters from the URL.\n */\nconst removeQuery = () => {\n  const newUrl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n  if (window.history.pushState) {\n    window.history.pushState(\"\", \"\", newUrl);\n  } else {\n    window.location.href = newUrl;\n  }\n};\nconst getToken = async code => {\n  const encodeCode = encodeURIComponent(code);\n  const response = await fetch('https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode);\n  const {\n    access_token\n  } = await response.json();\n  access_token && localStorage.setItem(\"access_token\", access_token);\n  return access_token;\n};","map":{"version":3,"names":["mockData","checkToken","accessToken","response","fetch","result","json","error","console","getAccessToken","localStorage","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","window","location","search","code","get","authUrl","href","getToken","extractLocations","events","extractedLocations","map","event","Set","getEvents","startsWith","token","removeQuery","url","newUrl","protocol","host","pathname","history","pushState","encodeCode","encodeURIComponent","access_token","setItem"],"sources":["/Users/loganmartin/Desktop/meetUpApp/meet/src/api.js"],"sourcesContent":["import mockData from './mock-data';\n\nexport const checkToken = async (accessToken) => {\n  try {\n    const response = await fetch(\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    );\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Error checking token:\", error);\n    return { error: \"Token check failed\" };\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    if (!code) {\n      try {\n        const response = await fetch(\n          'https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url'\n        );\n        const result = await response.json();\n        const { authUrl } = result;\n        window.location.href = authUrl;\n        return null; // Explicitly return null if redirecting\n      } catch (error) {\n        console.error(\"Error fetching auth URL:\", error);\n        return null;\n      }\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\n/**\n * Extracts unique locations from the events array.\n * @param {Array} events - The events array\n * @returns {Array} Unique locations\n */\nexport const extractLocations = (events) => {\n  const extractedLocations = events.map((event) => event.location);\n  return [...new Set(extractedLocations)];\n};\n\n/**\n * Fetches the list of events, using mock data in a local environment.\n * @returns {Array|null} The list of events, or null if fetching fails\n */\nexport const getEvents = async () => {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = \"https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-events\" + \"/\" + token;\n    try {\n      const response = await fetch(url);\n      const result = await response.json();\n      return result.events || null;\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n      return null;\n    }\n  }\n  return null;\n};\n\n/**\n * Removes the OAuth query parameters from the URL.\n */\nconst removeQuery = () => {\n  const newUrl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n  if (window.history.pushState) {\n    window.history.pushState(\"\", \"\", newUrl);\n  } else {\n    window.location.href = newUrl;\n  }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const response = await fetch(\n        'https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n    );\n    const { access_token } = await response.json();\n    access_token && localStorage.setItem(\"access_token\", access_token);\n  \n    return access_token;\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}