{"ast":null,"code":"import{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CitySearch=_ref=>{let{allLocations,setCurrentCity,setInfoAlert}=_ref;const[showSuggestions,setShowSuggestions]=useState(false);const[query,setQuery]=useState(\"\");const[suggestions,setSuggestions]=useState([]);useEffect(()=>{setSuggestions(allLocations);// Update suggestions when allLocations changes\n},[allLocations]);const handleInputChanged=event=>{const value=event.target.value;const filteredLocations=allLocations?allLocations.filter(location=>{return location.toUpperCase().indexOf(value.toUpperCase())>-1;}):[];setQuery(value);setSuggestions(filteredLocations);let infoText;if(filteredLocations.length===0){infoText=\"We can not find the city you are looking for. Please try another city\";}else{infoText=\"\";}setInfoAlert(infoText);};const handleItemClicked=event=>{const value=event.target.textContent;setQuery(value);setShowSuggestions(false);setCurrentCity(value);setInfoAlert(\"\");};return/*#__PURE__*/_jsxs(\"div\",{id:\"city-search\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"city\",placeholder:\"Search for a city\",value:query,onFocus:()=>setShowSuggestions(true),onChange:handleInputChanged}),showSuggestions&&/*#__PURE__*/_jsxs(\"ul\",{className:\"suggestions\",children:[suggestions.map(suggestion=>/*#__PURE__*/_jsx(\"li\",{onClick:handleItemClicked,children:suggestion},suggestion)),/*#__PURE__*/_jsx(\"li\",{onClick:handleItemClicked,children:/*#__PURE__*/_jsx(\"b\",{children:\"See all cities\"})},\"See all cities\")]})]});};export default CitySearch;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","CitySearch","_ref","allLocations","setCurrentCity","setInfoAlert","showSuggestions","setShowSuggestions","query","setQuery","suggestions","setSuggestions","handleInputChanged","event","value","target","filteredLocations","filter","location","toUpperCase","indexOf","infoText","length","handleItemClicked","textContent","id","children","type","className","placeholder","onFocus","onChange","map","suggestion","onClick"],"sources":["/Users/loganmartin/Desktop/meetUpApp/meet/src/components/CitySearch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst CitySearch = ({ allLocations, setCurrentCity, setInfoAlert}) => {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    setSuggestions(allLocations); // Update suggestions when allLocations changes\n  }, [allLocations]);\n\n  const handleInputChanged = (event) => {\n    const value = event.target.value;\n    const filteredLocations = allLocations ? allLocations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    }) : [];\n\n    setQuery(value);\n    setSuggestions(filteredLocations);\n\n    let infoText;\n    if (filteredLocations.length === 0) {\n      infoText = \"We can not find the city you are looking for. Please try another city\"\n    } else {\n      infoText = \"\"\n    }\n    setInfoAlert(infoText);\n  };\n\n  const handleItemClicked = (event) => {\n    const value = event.target.textContent;\n    setQuery(value);\n    setShowSuggestions(false);\n    setCurrentCity(value);\n    setInfoAlert(\"\")\n  };\n\n  return (\n    <div id=\"city-search\">\n      <input\n        type=\"text\"\n        className=\"city\"\n        placeholder=\"Search for a city\"\n        value={query}\n        onFocus={() => setShowSuggestions(true)}\n        onChange={handleInputChanged}\n      />\n      {showSuggestions && (\n        <ul className=\"suggestions\">\n          {suggestions.map((suggestion) => (\n            <li onClick={handleItemClicked} key={suggestion}>\n              {suggestion}\n            </li>\n          ))}\n          <li key=\"See all cities\" onClick={handleItemClicked}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default CitySearch;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAmD,IAAlD,CAAEC,YAAY,CAAEC,cAAc,CAAEC,YAAY,CAAC,CAAAH,IAAA,CAC/D,KAAM,CAACI,eAAe,CAAEC,kBAAkB,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACe,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAElDC,SAAS,CAAC,IAAM,CACde,cAAc,CAACR,YAAY,CAAC,CAAE;AAChC,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAS,kBAAkB,CAAIC,KAAK,EAAK,CACpC,KAAM,CAAAC,KAAK,CAAGD,KAAK,CAACE,MAAM,CAACD,KAAK,CAChC,KAAM,CAAAE,iBAAiB,CAAGb,YAAY,CAAGA,YAAY,CAACc,MAAM,CAAEC,QAAQ,EAAK,CACzE,MAAO,CAAAA,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,CACjE,CAAC,CAAC,CAAG,EAAE,CAEPV,QAAQ,CAACK,KAAK,CAAC,CACfH,cAAc,CAACK,iBAAiB,CAAC,CAEjC,GAAI,CAAAK,QAAQ,CACZ,GAAIL,iBAAiB,CAACM,MAAM,GAAK,CAAC,CAAE,CAClCD,QAAQ,CAAG,uEAAuE,CACpF,CAAC,IAAM,CACLA,QAAQ,CAAG,EAAE,CACf,CACAhB,YAAY,CAACgB,QAAQ,CAAC,CACxB,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAIV,KAAK,EAAK,CACnC,KAAM,CAAAC,KAAK,CAAGD,KAAK,CAACE,MAAM,CAACS,WAAW,CACtCf,QAAQ,CAACK,KAAK,CAAC,CACfP,kBAAkB,CAAC,KAAK,CAAC,CACzBH,cAAc,CAACU,KAAK,CAAC,CACrBT,YAAY,CAAC,EAAE,CAAC,CAClB,CAAC,CAED,mBACEL,KAAA,QAAKyB,EAAE,CAAC,aAAa,CAAAC,QAAA,eACnB5B,IAAA,UACE6B,IAAI,CAAC,MAAM,CACXC,SAAS,CAAC,MAAM,CAChBC,WAAW,CAAC,mBAAmB,CAC/Bf,KAAK,CAAEN,KAAM,CACbsB,OAAO,CAAEA,CAAA,GAAMvB,kBAAkB,CAAC,IAAI,CAAE,CACxCwB,QAAQ,CAAEnB,kBAAmB,CAC9B,CAAC,CACDN,eAAe,eACdN,KAAA,OAAI4B,SAAS,CAAC,aAAa,CAAAF,QAAA,EACxBhB,WAAW,CAACsB,GAAG,CAAEC,UAAU,eAC1BnC,IAAA,OAAIoC,OAAO,CAAEX,iBAAkB,CAAAG,QAAA,CAC5BO,UAAU,EADwBA,UAEjC,CACL,CAAC,cACFnC,IAAA,OAAyBoC,OAAO,CAAEX,iBAAkB,CAAAG,QAAA,cAClD5B,IAAA,MAAA4B,QAAA,CAAG,gBAAc,CAAG,CAAC,EADf,gBAEJ,CAAC,EACH,CACL,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}