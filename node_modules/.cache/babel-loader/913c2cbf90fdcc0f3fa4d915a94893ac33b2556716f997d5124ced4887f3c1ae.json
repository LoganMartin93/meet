{"ast":null,"code":"var _jsxFileName = \"/Users/loganmartin/Desktop/meetUpApp/meet/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { useEffect, useState } from 'react';\nimport { extractLocations, getEvents } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [currentNOE, setCurrentNOE] = useState(32);\n  const [allLocations, setAllLocations] = useState([]);\n  const [currentCity, setCurrentCity] = useState(\"See all cities\");\n  const [errorAlert, setErrorAlert] = useState(\"\");\n\n  // Add a state to track the visibility of each event's details\n  const [eventDetailsVisible, setEventDetailsVisible] = useState({});\n  useEffect(() => {\n    fetchData();\n  }, [currentCity, currentNOE]);\n  const fetchData = async () => {\n    const allEvents = await getEvents();\n    const filteredEvents = currentCity === \"See all cities\" ? allEvents : allEvents.filter(event => event.location === currentCity);\n    setEvents(filteredEvents.slice(0, currentNOE));\n    setAllLocations(extractLocations(allEvents));\n  };\n\n  // Toggle the visibility of event details\n  const toggleEventDetails = eventId => {\n    setEventDetailsVisible(prevState => ({\n      ...prevState,\n      [eventId]: !prevState[eventId] // Toggle visibility for the specific event\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CitySearch, {\n      allLocations: allLocations,\n      setCurrentCity: setCurrentCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      toggleEventDetails: toggleEventDetails // Pass the function to EventList\n      ,\n      eventDetailsVisible: eventDetailsVisible // Pass the visibility state to EventList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n      setErrorAlert: setErrorAlert,\n      currentNOE: currentNOE,\n      setCurrentNOE: setCurrentNOE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y3h86GIE5uxN+3km0IKMxXymXVQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["EventList","CitySearch","NumberOfEvents","useEffect","useState","extractLocations","getEvents","jsxDEV","_jsxDEV","App","_s","events","setEvents","currentNOE","setCurrentNOE","allLocations","setAllLocations","currentCity","setCurrentCity","errorAlert","setErrorAlert","eventDetailsVisible","setEventDetailsVisible","fetchData","allEvents","filteredEvents","filter","event","location","slice","toggleEventDetails","eventId","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/loganmartin/Desktop/meetUpApp/meet/src/App.js"],"sourcesContent":["import './App.css';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { useEffect, useState } from 'react';\nimport { extractLocations, getEvents } from './api';\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n  const [currentNOE, setCurrentNOE] = useState(32);\n  const [allLocations, setAllLocations] = useState([]);\n  const [currentCity, setCurrentCity] = useState(\"See all cities\");\n  const [errorAlert, setErrorAlert] = useState(\"\");\n\n  // Add a state to track the visibility of each event's details\n  const [eventDetailsVisible, setEventDetailsVisible] = useState({});\n\n  useEffect(() => {\n    fetchData();\n  }, [currentCity, currentNOE]);\n\n  const fetchData = async () => {\n    const allEvents = await getEvents();\n    const filteredEvents = currentCity === \"See all cities\" ?\n      allEvents : allEvents.filter(event => event.location === currentCity);\n    setEvents(filteredEvents.slice(0, currentNOE));\n    setAllLocations(extractLocations(allEvents));\n  };\n\n  // Toggle the visibility of event details\n  const toggleEventDetails = (eventId) => {\n    setEventDetailsVisible(prevState => ({\n      ...prevState,\n      [eventId]: !prevState[eventId]  // Toggle visibility for the specific event\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <CitySearch \n        allLocations={allLocations} \n        setCurrentCity={setCurrentCity} \n      />\n      <EventList \n        events={events} \n        toggleEventDetails={toggleEventDetails} // Pass the function to EventList\n        eventDetailsVisible={eventDetailsVisible} // Pass the visibility state to EventList\n      />\n      <NumberOfEvents \n        setErrorAlert={setErrorAlert}\n        currentNOE={currentNOE}\n        setCurrentNOE={setCurrentNOE}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,gBAAgB,CAAC;EAChE,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACiB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElED,SAAS,CAAC,MAAM;IACdoB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,WAAW,EAAEJ,UAAU,CAAC,CAAC;EAE7B,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,SAAS,GAAG,MAAMlB,SAAS,CAAC,CAAC;IACnC,MAAMmB,cAAc,GAAGR,WAAW,KAAK,gBAAgB,GACrDO,SAAS,GAAGA,SAAS,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,QAAQ,KAAKX,WAAW,CAAC;IACvEL,SAAS,CAACa,cAAc,CAACI,KAAK,CAAC,CAAC,EAAEhB,UAAU,CAAC,CAAC;IAC9CG,eAAe,CAACX,gBAAgB,CAACmB,SAAS,CAAC,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMM,kBAAkB,GAAIC,OAAO,IAAK;IACtCT,sBAAsB,CAACU,SAAS,KAAK;MACnC,GAAGA,SAAS;MACZ,CAACD,OAAO,GAAG,CAACC,SAAS,CAACD,OAAO,CAAC,CAAE;IAClC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA,CAACP,UAAU;MACTc,YAAY,EAAEA,YAAa;MAC3BG,cAAc,EAAEA;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF9B,OAAA,CAACR,SAAS;MACRW,MAAM,EAAEA,MAAO;MACfmB,kBAAkB,EAAEA,kBAAmB,CAAC;MAAA;MACxCT,mBAAmB,EAAEA,mBAAoB,CAAC;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF9B,OAAA,CAACN,cAAc;MACbkB,aAAa,EAAEA,aAAc;MAC7BP,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA;IAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA5B,EAAA,CAhDKD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}