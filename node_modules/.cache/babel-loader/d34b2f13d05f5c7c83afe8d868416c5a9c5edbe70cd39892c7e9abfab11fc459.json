{"ast":null,"code":"var _jsxFileName = \"/Users/loganmartin/Desktop/meetUpApp/meet/src/components/NumberOfEvents.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberOfEvents = ({\n  currentNOE,\n  setCurrentNOE,\n  setErrorAlert\n}) => {\n  _s();\n  const [number, setNumber] = useState(currentNOE || 32);\n  const handleInputChanged = event => {\n    const value = event.target.value;\n\n    // If input is empty, show an error and reset local state\n    if (value === '') {\n      setErrorAlert('Enter a valid number greater than 0');\n      setNumber('');\n      return;\n    }\n    const numValue = parseInt(value, 10);\n\n    // Validation for non-numeric or invalid values\n    if (isNaN(numValue) || numValue <= 0) {\n      setErrorAlert('Enter a valid number greater than 0');\n    } else if (numValue > 32) {\n      setErrorAlert('Only a maximum of 32 is allowed');\n    } else {\n      setErrorAlert(''); // Clear error if input is valid\n      setCurrentNOE(numValue); // Update global state in App\n    }\n\n    // Update local state for display\n    setNumber(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"number-of-events\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numberOfEventsInput\",\n      children: \"Number of Events:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"numberOfEventsInput\",\n      type: \"number\",\n      value: number,\n      onChange: handleInputChanged,\n      \"data-testid\": \"numberOfEventsInput\",\n      min: \"1\",\n      max: \"32\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(NumberOfEvents, \"m7Ur409IHZF4hfvOu6nkHCIlIVU=\");\n_c = NumberOfEvents;\nexport default NumberOfEvents;\nvar _c;\n$RefreshReg$(_c, \"NumberOfEvents\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NumberOfEvents","currentNOE","setCurrentNOE","setErrorAlert","_s","number","setNumber","handleInputChanged","event","value","target","numValue","parseInt","isNaN","id","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","max","_c","$RefreshReg$"],"sources":["/Users/loganmartin/Desktop/meetUpApp/meet/src/components/NumberOfEvents.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst NumberOfEvents = ({ currentNOE, setCurrentNOE, setErrorAlert }) => {\n    const [number, setNumber] = useState(currentNOE || 32);\n\n    const handleInputChanged = (event) => {\n        const value = event.target.value;\n\n        // If input is empty, show an error and reset local state\n        if (value === '') {\n            setErrorAlert('Enter a valid number greater than 0');\n            setNumber('');\n            return;\n        }\n\n        const numValue = parseInt(value, 10);\n\n        // Validation for non-numeric or invalid values\n        if (isNaN(numValue) || numValue <= 0) {\n            setErrorAlert('Enter a valid number greater than 0');\n        } else if (numValue > 32) {\n            setErrorAlert('Only a maximum of 32 is allowed');\n        } else {\n            setErrorAlert(''); // Clear error if input is valid\n            setCurrentNOE(numValue); // Update global state in App\n        }\n\n        // Update local state for display\n        setNumber(value);\n    };\n\n    return (\n        <div id=\"number-of-events\">\n            <label htmlFor=\"numberOfEventsInput\">Number of Events:</label>\n            <input\n                id=\"numberOfEventsInput\"\n                type=\"number\"\n                value={number}\n                onChange={handleInputChanged}\n                data-testid=\"numberOfEventsInput\"\n                min=\"1\"\n                max=\"32\"\n            />\n        </div>\n    );\n};\n\nexport default NumberOfEvents;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,aAAa;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACI,UAAU,IAAI,EAAE,CAAC;EAEtD,MAAMM,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;;IAEhC;IACA,IAAIA,KAAK,KAAK,EAAE,EAAE;MACdN,aAAa,CAAC,qCAAqC,CAAC;MACpDG,SAAS,CAAC,EAAE,CAAC;MACb;IACJ;IAEA,MAAMK,QAAQ,GAAGC,QAAQ,CAACH,KAAK,EAAE,EAAE,CAAC;;IAEpC;IACA,IAAII,KAAK,CAACF,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,EAAE;MAClCR,aAAa,CAAC,qCAAqC,CAAC;IACxD,CAAC,MAAM,IAAIQ,QAAQ,GAAG,EAAE,EAAE;MACtBR,aAAa,CAAC,iCAAiC,CAAC;IACpD,CAAC,MAAM;MACHA,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;MACnBD,aAAa,CAACS,QAAQ,CAAC,CAAC,CAAC;IAC7B;;IAEA;IACAL,SAAS,CAACG,KAAK,CAAC;EACpB,CAAC;EAED,oBACIV,OAAA;IAAKe,EAAE,EAAC,kBAAkB;IAAAC,QAAA,gBACtBhB,OAAA;MAAOiB,OAAO,EAAC,qBAAqB;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9DrB,OAAA;MACIe,EAAE,EAAC,qBAAqB;MACxBO,IAAI,EAAC,QAAQ;MACbZ,KAAK,EAAEJ,MAAO;MACdiB,QAAQ,EAAEf,kBAAmB;MAC7B,eAAY,qBAAqB;MACjCgB,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChB,EAAA,CA3CIJ,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}