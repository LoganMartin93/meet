{"ast":null,"code":"var _jsxFileName = \"/Users/loganmartin/Desktop/meetUpApp/meet/src/components/NumberOfEvents.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberOfEvents = ({\n  currentNOE,\n  setCurrentNOE,\n  setErrorAlert\n}) => {\n  _s();\n  const [number, setNumber] = useState(currentNOE);\n  const handleInputChanged = event => {\n    const value = event.target.value;\n    setNumber(value);\n    if (isNaN(value) || value <= 0) {\n      setErrorAlert('Enter a valid number');\n    } else if (value > 32) {\n      setErrorAlert('Only maximum of 32 is allowed');\n    } else {\n      setErrorAlert('');\n      setCurrentNOE(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"number-of-events\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number of Events:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: number,\n        onChange: handleInputChanged,\n        \"data-testid\": \"numberOfEventsInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(NumberOfEvents, \"ND++6pY8/38/Zevds/ytYXMBaCY=\");\n_c = NumberOfEvents;\nexport default NumberOfEvents;\nvar _c;\n$RefreshReg$(_c, \"NumberOfEvents\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NumberOfEvents","currentNOE","setCurrentNOE","setErrorAlert","_s","number","setNumber","handleInputChanged","event","value","target","isNaN","id","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/loganmartin/Desktop/meetUpApp/meet/src/components/NumberOfEvents.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst NumberOfEvents = ({ currentNOE, setCurrentNOE, setErrorAlert }) => {\n    const [number, setNumber] = useState(currentNOE);\n    \n    const handleInputChanged = (event) => {\n        const value = event.target.value;\n        setNumber(value)\n        if(isNaN(value) || value <= 0) {\n            setErrorAlert('Enter a valid number');\n        } else if (value > 32) {\n            setErrorAlert('Only maximum of 32 is allowed');\n        } else {\n            setErrorAlert('');\n            setCurrentNOE(value);\n        }\n    };\n\n    return (\n        <div id=\"number-of-events\">\n            <label>\n                Number of Events:\n            <input \n                type=\"text\"\n                value={number}\n                onChange={handleInputChanged}\n                data-testid=\"numberOfEventsInput\"\n            />\n            </label>\n        </div>\n    )\n};\n\nexport default NumberOfEvents;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,aAAa;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACI,UAAU,CAAC;EAEhD,MAAMM,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCH,SAAS,CAACG,KAAK,CAAC;IAChB,IAAGE,KAAK,CAACF,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC,EAAE;MAC3BN,aAAa,CAAC,sBAAsB,CAAC;IACzC,CAAC,MAAM,IAAIM,KAAK,GAAG,EAAE,EAAE;MACnBN,aAAa,CAAC,+BAA+B,CAAC;IAClD,CAAC,MAAM;MACHA,aAAa,CAAC,EAAE,CAAC;MACjBD,aAAa,CAACO,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIV,OAAA;IAAKa,EAAE,EAAC,kBAAkB;IAAAC,QAAA,eACtBd,OAAA;MAAAc,QAAA,GAAO,mBAEP,eAAAd,OAAA;QACIe,IAAI,EAAC,MAAM;QACXL,KAAK,EAAEJ,MAAO;QACdU,QAAQ,EAAER,kBAAmB;QAC7B,eAAY;MAAqB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACf,EAAA,CA7BIJ,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}