{"ast":null,"code":"import mockData from'./mock-data';/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */export const extractLocations=events=>{const extractedLocations=events.map(event=>event.location);const locations=[...new Set(extractedLocations)];return locations;};const removeQuery=()=>{let newurl;if(window.history.pushState&&window.location.pathname){newurl=window.location.protocol+\"//\"+window.location.host+window.location.pathname;window.history.pushState(\"\",\"\",newurl);}else{newurl=window.location.protocol+\"//\"+window.location.host;window.history.pushState(\"\",\"\",newurl);}};const checkToken=async accessToken=>{const response=await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`);const result=await response.json();return result;};/**\n *\n * This function will fetch the list of all events\n */export const getEvents=async()=>{if(window.location.href.startsWith(\"http://localhost\")){return mockData;}const token=await getAccessToken();if(token){removeQuery();const url=\"https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-events\"+\"/\"+token;const response=await fetch(url);const result=await response.json();if(result){return result.events;}else return null;}};const getToken=async code=>{const encodeCode=encodeURIComponent(code);const response=await fetch(\"https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/token\"+'/'+encodeCode);const{access_token}=await response.json();access_token&&localStorage.setItem(\"access_token\",access_token);return access_token;};export const getAccessToken=async()=>{const accessToken=localStorage.getItem('access_token');const tokenCheck=accessToken&&(await checkToken(accessToken));if(!accessToken||tokenCheck.error){await localStorage.removeItem(\"access_token\");const searchParams=new URLSearchParams(window.location.search);const code=await searchParams.get(\"code\");if(!code){const response=await fetch('https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url');const result=await response.json();const{authUrl}=result;return window.location.href=authUrl;}return code&&getToken(code);}return accessToken;};","map":{"version":3,"names":["mockData","extractLocations","events","extractedLocations","map","event","location","locations","Set","removeQuery","newurl","window","history","pushState","pathname","protocol","host","checkToken","accessToken","response","fetch","result","json","getEvents","href","startsWith","token","getAccessToken","url","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getItem","tokenCheck","error","removeItem","searchParams","URLSearchParams","search","get","authUrl"],"sources":["/Users/loganmartin/Desktop/meetUpApp/meet/src/api.js"],"sourcesContent":["import mockData from './mock-data';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  const extractedLocations = events.map((event) => event.location);\n  const locations = [...new Set(extractedLocations)];\n  return locations;\n};\n\nconst removeQuery = () => {\n  let newurl;\n  if (window.history.pushState && window.location.pathname) {\n    newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst checkToken = async (accessToken) => {\n  const response = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  );\n  const result = await response.json();\n  return result;\n};\n\n/**\n *\n * This function will fetch the list of all events\n */\nexport const getEvents = async () => {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =  \"https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-events\" + \"/\" + token;\n    const response = await fetch(url);\n    const result = await response.json();\n    if (result) {\n      return result.events;\n    } else return null; \n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const response = await fetch(\n    \"https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/token\" + '/' + encodeCode\n  );\n  const { access_token } = await response.json();\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n      if (!code) {\n        const response = await fetch(\n            'https://g0woxi8rqa.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url'\n        );\n        const result = await response.json();\n        const { authUrl } = result;\n        return (window.location.href = authUrl);\n      }\n      return code && getToken(code);\n      }\n  return accessToken;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}